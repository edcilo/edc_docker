version: "3.3"

services:
    edc_proxy_nginx:
        container_name: edc_proxy_nginx
        image: jwilder/nginx-proxy
        restart: always
        volumes:
            - ./docker/proxy/dhparam:/etc/nginx/dhparam
            - ./docker/proxy/conf:/etc/nginx/conf.d
            - ./docker/proxy/vhost:/etc/nginx/vhost.d
            - ./docker/proxy/html:/usr/share/nginx/html
            - ./docker/letsencrypt/certs:/etc/nginx/certs:ro
            - /var/run/docker.sock:/tmp/docker.sock:ro
        ports:
            - ${PROXY_PORT:-80}:80
            - ${PROXY_SSL_PORT:-443}:443
        depends_on:
            - edc_landing_django
            - edc_spa_nginx
        networks:
            - edciloNet
        labels:
            - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

    edc_letsencrypt:
        container_name: edc_letsencrypts
        image: jrcs/letsencrypt-nginx-proxy-companion
        restart: always
        volumes:
            - ./docker/letsencrypt/certs:/etc/nginx/certs:rw
            - ./docker/letsencrypt/acme:/etc/acme.sh
            - /var/run/docker.sock:/var/run/docker.sock:ro
        volumes_from:
            - edc_proxy_nginx:rw
        network_mode: bridge


    edc_landing_psql:
        container_name: edc_landing_psql
        image: postgres
        restart: always
        ports:
            - ${SERVICE_LANDING_DB_PORT:-5432}:5432
        volumes:
            - landingPsqlVolume:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${SERVICE_LANDING_DB_NAME:-landing}
            POSTGRES_USER: ${SERVICE_LANDING_DB_USER:-admin}
            POSTGRES_PASSWORD: ${SERVICE_LANDING_DB_PASS:-secret}
        networks:
            - edciloNet

    edc_landing_django:
        container_name: edc_landing_django
        build: ./services/landingpage
        restart: always
        volumes:
            - ./services/landingpage:/code
        depends_on:
            - edc_landing_psql
        environment:
            - APP_ENV=${SERVICE_LANDING_ENV:-dev}
            - VIRTUAL_HOST=${SERVICE_LANDING_DNS}
            - LETSENCRYPT_HOST=${SERVICE_LANDING_DNS}
            - LETSENCRYPT_EMAIL=${SSL_LETSENCRYPT_EMAIL}
        networks:
            - edciloNet


    edc_spa_nginx:
        container_name: edc_spa_nginx
        image: nginx:alpine
        restart: always
        volumes:
            - ./services/spa/dist:/app
            - ./docker/spa/logs/static.log:/app/logs/static.log
            - ./docker/spa/nginx/sites:/etc/nginx/conf.d
        environment:
            - VIRTUAL_HOST=${SERVICE_SPA_DNS}
            - LETSENCRYPT_HOST=${SERVICE_SPA_DNS}
            - LETSENCRYPT_EMAIL=${SSL_LETSENCRYPT_EMAIL}
        networks:
            - edciloNet


networks:
    edciloNet:
        driver: "bridge"

volumes:
    landingPsqlVolume:
